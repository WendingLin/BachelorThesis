function [y1,xf1] = myNeuralNetworkFunction(x1,xi1)
%MYNEURALNETWORKFUNCTION neural network simulation function.
%
% Generated by Neural Network Toolbox function genFunction, 23-May-2018 19:25:12.
%
% [y1,xf1] = myNeuralNetworkFunction(x1,xi1) takes these arguments:
%   x1 = 1xTS matrix, input #1
%   xi1 = 1x7 matrix, initial 7 delay states for input #1.
% and returns:
%   y1 = 1xTS matrix, output #1
%   xf1 = 1x7 matrix, final 7 delay states for input #1.
% where TS is the number of timesteps.

% ===== NEURAL NETWORK CONSTANTS =====

% Input 1
x1_step1.xoffset = 5.88280785246877;
x1_step1.gain = 0.344009004399877;
x1_step1.ymin = -1;

% Layer 1
b1 = [2.8802497886089502;-1.8964856062290556;1.7883795294185529;-0.11402930969614249;-0.84678534843823583;0.87715935482743423;0.46613172553638726;0.4196301383891356;0.63687001903576967;1.7360898114992125;1.9928255260980092;1.470807044125586;1.6385136409260379;1.9830766635599169;-2.1875453628782759];
IW1_1 = [-0.54264854889681258 0.26487079298798771 -0.78697615541646815 -1.1975437856749489 -1.0314464710641618 -0.21920575757407063 -1.1984475428297456;0.77006542834771163 1.2531997939071662 -0.11008361800997751 -1.2343835663377454 0.19447364504877063 -0.76158375144669055 0.1482255132518078;-0.81629297451779759 -0.69738928614359996 0.054061152057855381 -2.2192856960576242 0.09084224218520226 0.48201570364327695 -0.088643882855449968;-0.87721365069380719 -1.1669446449622718 -0.19455521474106074 0.28615018178231955 -1.2021515369261451 1.033569754093721 -0.3536508567376912;1.5789379038048383 1.6514062339397393 0.99218305687386399 0.17320191949988265 0.53118809606163997 -0.28255131365883462 -0.87138761217724625;0.20352176353198284 -0.87984251583948359 -0.71752405900384886 1.12011451357939 1.0259624429896459 -1.6924913315494974 -0.062756929267031358;-1.526098178429929 0.79376174639715646 -0.78247627166727085 0.35319561266231592 -0.75881468800655028 0.35319341775401319 -0.91687985206639167;-0.64007527005549281 -0.12382216953928019 0.15873407683396726 -0.53595555940812067 1.4777259144761308 0.63622149455020738 -0.84979585061074536;0.57269748323316616 1.1845008916149504 1.2098007555581227 0.23206681415645714 -0.82594371234354469 0.74317074643499803 2.0521945063870994;0.57295497439504173 -0.68338256992338542 0.074675658181026824 -0.58876176354406584 -0.48764601854821943 0.57615815914059998 2.065396551043686;3.0830093211930616 0.55733913190930495 1.6102203761172553 -1.0161244679940582 -0.43248895527369013 0.59749366745348054 0.32793244974652969;0.88988325646191102 -0.080764972406649829 0.99734933330968323 -0.74749143515030858 -0.35695683062842998 1.2114689895692385 0.3116446528998974;0.54218698837843593 -1.2791196327028513 1.0253261367784303 0.76045266845216597 -0.51413138907272282 -0.15859772364146135 0.30796379518072209;0.38648262884035955 -0.17906412239756206 -1.2141287009491444 0.93192996772786063 0.42789481156823334 0.43532399604296634 1.0800677369545295;-1.084929844253999 0.70519250220033913 -0.9087763123908883 0.89720726378826032 -0.46956917984750413 -0.10228342157187378 0.59633550228063181];

% Layer 2
b2 = 0.24269801352875364;
LW2_1 = [0.80237527768146499 -0.09309306395304591 -0.90803488221002848 0.0033009099518762422 -0.60220338022955944 -1.2689301290898081 -1.2781234412629172 -0.38810769229897507 -0.63927100610025911 -0.44327401246284376 0.33497421631777452 -0.21278263059490299 0.60595793768213468 -0.04855255373953505 -0.76440040960179401];

% Output 1
y1_step1.ymin = -1;
y1_step1.gain = 0.344009004399877;
y1_step1.xoffset = 5.88280785246877;

% ===== SIMULATION ========

% Dimensions
TS = size(x1,2); % timesteps

% Input 1 Delay States
xd1 = mapminmax_apply(xi1,x1_step1);
xd1 = [xd1 zeros(1,1)];

% Allocate Outputs
y1 = zeros(1,TS);

% Time loop
for ts=1:TS
    
    % Rotating delay state position
    xdts = mod(ts+6,8)+1;
    
    % Input 1
    xd1(:,xdts) = mapminmax_apply(x1(:,ts),x1_step1);
    
    % Layer 1
    tapdelay1 = reshape(xd1(:,mod(xdts-[1 2 3 4 5 6 7]-1,8)+1),7,1);
    a1 = tansig_apply(b1 + IW1_1*tapdelay1);
    
    % Layer 2
    a2 = b2 + LW2_1*a1;
    
    % Output 1
    y1(:,ts) = mapminmax_reverse(a2,y1_step1);
end

% Final delay states
finalxts = TS+(1: 7);
xits = finalxts(finalxts<=7);
xts = finalxts(finalxts>7)-7;
xf1 = [xi1(:,xits) x1(:,xts)];
end

% ===== MODULE FUNCTIONS ========

% Map Minimum and Maximum Input Processing Function
function y = mapminmax_apply(x,settings)
y = bsxfun(@minus,x,settings.xoffset);
y = bsxfun(@times,y,settings.gain);
y = bsxfun(@plus,y,settings.ymin);
end

% Sigmoid Symmetric Transfer Function
function a = tansig_apply(n,~)
a = 2 ./ (1 + exp(-2*n)) - 1;
end

% Map Minimum and Maximum Output Reverse-Processing Function
function x = mapminmax_reverse(y,settings)
x = bsxfun(@minus,y,settings.ymin);
x = bsxfun(@rdivide,x,settings.gain);
x = bsxfun(@plus,x,settings.xoffset);
end
